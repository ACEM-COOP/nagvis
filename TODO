This is a small file for storing quick thoughts about new features and needed changes:
===============================================================================

- Doku Link im Header darf nur auf Sprachen zeigen, die auch existieren

- Backends:
 - Zusätzlich beliebige Variablen vom Backend holen lassen
   Pro Objekt "Custom Vars" für Context- und Hover-Menus einbauen. Diese werden dann pro Objekt
   u.U. sogar in separaten Queries an das Backend abgefragt und in Hover- und Context-Menus
   als spezielle Macros angeboten.

Installer:
 - Der Installer muss beim Update darauf achten, dass die alten [paths] Variablen aus
   der nagvis.ini.php entfernt werden.

Neue Idee:
- Map Aufbau gliedert sich in 2 Phasen
  1. Was kommt auf die Map? Mögliche Quellen:
    - Map-Konfiguration
    - Funktion liefert Datenkostrukt zurück (wird zu Map-Konfiguration gemerged)
    - Es könnte auch ein Include auf irgendeine Datei sein
    - Die Funktion wird nur beim Parsen der Map Konfiguration geladen; Die Daten kommen mit in den Map-Cache
    - Die Funktion kann dann z.B. externe Datenbanken/Livestatus oder so anzapfen um von dort automatisch Objekte zu holen
    - Das Konstrukt kann auch Objekte mit Eigenschaften enthalen, diese könnten dann von der Map Konfiguration überschrieben werden (?)
2. Welche Eigenschaften haben die Objekte?

Relative Koordinaten:
  - Wie funktionieren Linien zu Linien Referenzen? Geht das überhaupt?

Linien (Auch für neue Automap wichtig!):
 - Pfeilspitzen konfigurierbar machen
   - Größe
   - Stil
   - Farbe (?)
 - Offset zum Ziel

*** Add/Modify Redesign ***

Aufrufe:
1. Neues Objekt - x/y Koordinaten als Parameter
  - Parameter: type, x, y
2. Objekt klonen - Aktuell konfigurierte Parameter + Objekt-ID generieren
  - Parameter: type, x, y, ...
3. Objekt bearbeiten - Aktuell konfigurierte Parameter
  - object_id

Feld-Eigenschaften:
- Default Werte grau zeigen, solange bis ein anderer Wert gewählt wird
- Wenn Wert auf Default zurückgesetzt wird, wieder ausgrauen
- Zwischen Dropdown und Textfeld umschalten können
- Butten zum Zurücksetzen eines Wertes auf Default einbauen
- Abhängige Felder je nach Wert zeigen/verstecken

Fehlerbehandlung:
- Direkt im Dialog: Feldbezogene Fehler direkt unter den Feldern anzeigen
- Generelle Fehler als Popup/über Formular anzeigen

- Verarbeitung ohne Javascript, kompletter Dialog wird neu generiert

*** Shortcuts einbauen ***

Gerade der Edit-Modus im normalen Frontend sollte Hotkeys haben. Diese sollten
nach Möglichkeit nicht mit Hotkeys von FF/IE kollidieren.

*** Fehlerbehandlung ***
  Ajax Schnittstelle umbauen: Kleines Protokoll einbauen, mit Header inkl. Fehlercodes etc.
  und man muss nicht bei jeder Anfrage immer die Feld-Namen mitsenden (-> weniger Overhead).

  Bessere Fehlerbehandlung z.B. auf Übersichtsseite, wenn Antwort kein gültiges JS ist.

Exception/Error log bauen:
  PHP Fehler loggen
	Eventuell sogar Javascript fehler loggen

*** Dokumentation ***
  - Neue Editier-Möglichkeiten in der normalen GUI
  - Mittleren Teil der Linien festmachen oder positionieren
  - Relative Koordinaten
  - Relative Koordinaten via Ctrl setzen und via Shift lösen

