<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright (C) 2009 NagVis Project
 
 License:
 
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License version 2 as
 published by the Free Software Foundation.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<EdgeBox xmlns="lib.ui.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:flexlib="http://code.google.com/p/flexlib/"
	xmlns:hc="com.hillelcoren.components.*"
	xmlns:classes="com.hillelcoren.components.autoComplete.classes.*"
	contracted="addEventListener(MouseEvent.CLICK, onClick)"
	expanded="removeEventListener(MouseEvent.CLICK, onClick)"
>
	<mx:Script>
		<![CDATA[
			import mx.formatters.SwitchSymbolFormatter;
			import modules.gmap.events.NagiosObjectEvent;
			import mx.events.CloseEvent;
			import mx.events.MenuEvent;
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			
			import com.google.maps.LatLng;
			
			import modules.gmap.events.LocationEvent;
			import modules.gmap.domain.nagios.ServiceGroup;
			import modules.gmap.domain.nagios.HostGroup;
			import modules.gmap.domain.nagios.Service;
			import modules.gmap.domain.nagios.Host;
			import modules.gmap.domain.Location;

			public var hosts:ArrayCollection;
			public var hostgroups:ArrayCollection;
			public var services:ArrayCollection;
			public var servicegroups:ArrayCollection;

			private var _location:Location;

			public function set location(location : Location) : void
			{
				if(_location !== location)
				{
					_location = location;
					
					if(location)
					{
						locName.text = location.label;
						locLat.text = LatLng.fromUrlValue(location.point).lat().toString();
						locLng.text = LatLng.fromUrlValue(location.point).lng().toString();
						locAddress.text = location.address;
						locDescription.text = location.description;
	
						if(location.id && location.id.length > 0)
						{
							addButton.visible = false;
							saveButton.visible = true;
							deleteButton.visible = true;
						}
						else
						{
							addButton.visible = true;
							saveButton.visible = false;
							deleteButton.visible = false;
						}
	
						/* Note: 
						 *	onObjectTypeChange is called manually because Flex 
						 *	does not do this when setting selectedIndex programatically 
						 *	though documentation says it should
						 */
						if (location.object is HostGroup)
						{
							locNObjectType.selectedIndex = 2;
							onObjectTypeChange();
							locNObject.selectedItem = location.object;
						}
						else if (location.object is ServiceGroup)
						{
							locNObjectType.selectedIndex = 3;
							onObjectTypeChange();
							locNObject.selectedItem = location.object;
						}
						else if (location.object is Host)
						{
							locNObjectType.selectedIndex = 0;
							onObjectTypeChange();
							locNObject.selectedItem = location.object;
						}
						else if (location.object is Service)
						{
							locNObjectType.selectedIndex = 1;
							onObjectTypeChange();
							locNObject.selectedItem = location.object;
						}
					}
					else
					{
						locName.text = "";
						locLat.text = "";
						locLng.text = "";
						locAddress.text = "";
						locDescription.text = "";
						locNObjectType.selectedIndex = 2;
						onObjectTypeChange();
					}
				}
			}
			
			protected function getUpdatedLocation():Location
			{
				var ul:Location = new Location();
				
				ul.id = _location.id;	
				ul.point = new LatLng(parseFloat(locLat.text), parseFloat(locLng.text)).toUrlValue(16);
				ul.label = locName.text;
				ul.address = locAddress.text;
				ul.description = locDescription.text;
				ul.object = locNObject.selectedItem;
				
				return ul;				
			}

			private function onAddClicked():void
			{
				dispatchEvent(new LocationEvent(LocationEvent.ADD, getUpdatedLocation()));
			} 

			private function onSaveClicked():void
			{
				if(_location && _location.id && _location.id.length > 0)
				{
					dispatchEvent(new LocationEvent(LocationEvent.SAVE, getUpdatedLocation()));
				}
			} 
			
			private function onDeleteClicked():void
			{
				if(_location && _location.id && _location.id.length > 0)
				{
					Alert.show(
						'Are you sure to delete location ' + _location.label + "?", 
						'Confirmation', 
						3, this,
						deleteConfirmation
					);
				}
			}
			
			private function deleteConfirmation(event : CloseEvent):void
			{ 
				if(event.detail == Alert.YES)
				{
					dispatchEvent(new LocationEvent(LocationEvent.DELETE, getUpdatedLocation()));
				}
			}
			
			private function onObjectTypeChange() : void
			{
				locNObject.removeAll();

				switch(locNObjectType.selectedIndex)
				{
					case 0:
						locNObject.dataProvider = hosts;
						locNObject.browserFields = ["name", "address", "alias"];
						locNObject.labelFunction = hostLabelFunction;
						break;
					case 1:
						locNObject.dataProvider = services;
						locNObject.browserFields = ["host", "description"];
						locNObject.labelFunction = serviceLabelFunction;
						break;
					case 2:
						locNObject.dataProvider = hostgroups;
						locNObject.browserFields = ["name", "alias"];
						locNObject.labelFunction = groupLabelFunction;
						break;
					case 3:
						locNObject.dataProvider = servicegroups;
						locNObject.browserFields = ["name", "alias"];
						locNObject.labelFunction = groupLabelFunction;
						break;
				}
			}
			
			private function loadNagiosData():void
			{
				switch(locNObjectType.selectedIndex)
				{
					case 0:
						dispatchEvent(new NagiosObjectEvent(NagiosObjectEvent.NEED_ALL_HOSTS));
						break;
					case 1:
						dispatchEvent(new NagiosObjectEvent(NagiosObjectEvent.NEED_ALL_SERVICES));
						break;
					case 2:
						dispatchEvent(new NagiosObjectEvent(NagiosObjectEvent.NEED_ALL_HOSTGROUPS));
						break;
					case 3:
						dispatchEvent(new NagiosObjectEvent(NagiosObjectEvent.NEED_ALL_SERVICEGROUPS));
						break;
				}
			}

			protected function onActionChanges():void
			{			
				switch(locAction.selectedIndex)
				{
					case 2:
						locActionMaps.visible = true; 
						locActionURL.visible = false;
						break;
					case 3:
						locActionMaps.visible = false; 
						locActionURL.visible = true;
						break;
					default:
						locActionMaps.visible = locActionURL.visible = false;
				}
			}		
		]]>
	</mx:Script>
	<mx:Script>
		<![CDATA[
			
			/***
			 * Code concerning Nagios object autocomlete
			 ***/
			 
			private function initNObject():void
			{
				locNObject.flowBox.setStyle("borderStyle", "solid");
				locNObject.flowBox.setStyle("borderColor", "#000000");
				locNObject.flowBox.setStyle("cornerRadius", "3");
			}
			
			private function objectItemClick(event : MenuEvent) : void
			{
				switch (String(event.item.@data))
				{
					case "browse":
						loadNagiosData();
						locNObject.showBrowser();
						break;
				}
			}

			public function hostLabelFunction(item : Object) : String
			{
				return item.name + ' / ' + item.address + ' (' + item.alias + ')';
			}

			public function serviceLabelFunction(item : Object) : String
			{
				return item.description + ' on ' + item.host;
			}

			public function groupLabelFunction(item : Object) : String
			{
				return item.name + ' (' + item.alias + ')';
			}
		]]>
	</mx:Script>	
	<mx:XML format="e4x" id="autoCompleteMenu">
		<root>
			<menuitem data="browse" label="Browse..."/>
		</root>
	</mx:XML>
	<mx:HBox left="10" right="15" top="10" height="20">
		<mx:Image id="logo" source="@Embed(source='modules/gmap/img/pin.png')"/>
		<mx:Label text="Location Details"/>
		<mx:Spacer width="100%"/>
		<mx:Image id="close"
			source="@Embed(source='modules/gmap/img/control_fastforward.png')"
			click="setCurrentState('right-contracted'); event.stopImmediatePropagation()"
		/>
	</mx:HBox>
	<mx:Canvas left="10" right="15" top="40" bottom="10">
		<flexlib:HAccordion selectedIndex="0" left="0" right="0" top="0" height="138" styleName="accordion" creationPolicy="all">
			<mx:Canvas label="General" width="100%" height="100%">
				<flexlib:PromptingTextInput id="locName" prompt="Name"
					left="10" right="10" top="0"
				/>
				<flexlib:PromptingTextInput id="locLat" prompt="Latitude"
					left="10" top="30" 	width="45%"
				 />
				<flexlib:PromptingTextInput id="locLng" prompt="Longitude"
					top="30" right="10"	width="45%"
			 	/>
				<flexlib:PromptingTextArea  id="locAddress" prompt="Address"
					right="10" left="10" top="60" bottom="0"
				/>
			</mx:Canvas>
			<mx:Canvas label="Description" width="100%" height="100%">
				<flexlib:PromptingTextArea  id="locDescription" prompt="Description"
					right="10" left="10" top="0" bottom="0"
				/>
			</mx:Canvas>
			<mx:Canvas label="Nagios" width="100%" height="100%">
				<mx:VBox left="5" right="5" top="10" bottom="0" borderStyle="solid" cornerRadius="4" borderColor="#000000" verticalAlign="middle">
					<mx:Spacer/>
					<mx:HBox width="100%">
						<mx:Spacer/>
						<mx:Label text="Type:" left="10" top="10" height="18"/>
						<mx:Spacer/>
					</mx:HBox>
					<mx:HBox width="100%">
						<mx:Spacer/>
						<mx:ComboBox id="locNObjectType" width="100%" change="onObjectTypeChange()">
							<mx:ArrayCollection>
								<mx:String>Host</mx:String>
								<mx:String>Service</mx:String>
								<mx:String>Host Group</mx:String>
								<mx:String>Service Group</mx:String>
							</mx:ArrayCollection>
						</mx:ComboBox>
						<mx:Spacer/>
					</mx:HBox>
					<mx:HBox width="100%">
						<mx:Spacer/>
						<mx:Label text="Object:" top="70" left="10"/>
						<mx:Spacer/>
					</mx:HBox>
					<mx:HBox width="100%">
						<mx:Spacer/>
						<hc:AdvancedAutoComplete id="locNObject" width="100%"
							creationComplete="initNObject()" focusIn="loadNagiosData()"
							selectedItemStyleName="underline" labelFunction="groupLabelFunction"
							matchType="anyPart" allowMultipleSelection="false" showRemoveIcon="true"
							actionsMenuDataProvider="{autoCompleteMenu}" itemClick="objectItemClick(event)"
							browserFields="{['name', 'alias']}"
						/>
						<mx:Spacer/>
					</mx:HBox>
				</mx:VBox>
				<mx:TextInput cornerRadius="10" text=" Associate with" top="0" left="15" width="90" borderStyle="solid" editable="false"/>
			</mx:Canvas>
			<mx:Canvas label="Actions" width="100%" height="100%" horizontalScrollPolicy="off">
				<mx:Canvas left="5" right="0" top="10" bottom="0" borderStyle="solid" cornerRadius="4" borderColor="#000000">
					<mx:ComboBox id="locAction" change="onActionChanges()"
						left="5" right="5" top="30"
					>
						<mx:ArrayCollection>
							<mx:String>do nothing</mx:String>
							<mx:String>open Nagios details page</mx:String>
							<mx:String>open NagVis map</mx:String>
							<mx:String>go to URL</mx:String>
						</mx:ArrayCollection>
					</mx:ComboBox>
					<mx:ComboBox id="locActionMaps" visible="false"
						left="5" right="5" top="70"
					/>
					<mx:TextInput id="locActionURL" visible="false"
						left="5" right="5" top="70"
					/>
				</mx:Canvas>
				<mx:TextInput cornerRadius="10" text="On Double Click" top="0" left="15" width="100" borderStyle="solid" editable="false"/>
			</mx:Canvas>
		</flexlib:HAccordion>
		<mx:Button id="addButton" label="Add" visible="false"
			right="0" bottom="0"
			click="onAddClicked()"
		/>
		<mx:Button id="saveButton" label="Save" 
			right="0" bottom="0" 
			click="onSaveClicked()"
		/>
		<mx:Button id="deleteButton" label="Delete" 
			right="65" bottom="0" 
			click="onDeleteClicked()"
		/>
	</mx:Canvas>
</EdgeBox>
