backend~The Backend used by NagVis to get the Data from Nagios. Use can choose between the slow and unreliable but simple to configure  HTML, wich parses the Nagios CGI output, and the new fast and stable NDOMY, wich fetches the data from a Nagios NDO MySQL DB. NDOMY is more complex to configure because you have to install the Nagios NDO Utils first.
language~Choose your language from one of the installed language packs.
defaultIcons~Default Iconset. Used for the maps creation.
rotateMaps~Rotate Maps automatically.
maps~Maps to rotate. Example : array('server','lan','wan')
displayHeader~Display Header.
headerCount~Number of links displayed in one header line.
autoUpdateFreq~For your own safety the maps are saved every X times they're saved or modify. You simply can restore the UNIQUE backup made, with the 'Restore' function. This parameter controls the X value.
checkConfig~If set to 'Yes', forces a check of the current configuration. MUST be done after any change.
useGDLibs~
refreshTime~Map refresh time (in seconds).
debug~
debugStates~
debugCheckState~
debugFixIcon~
base~Local path (full) to NagVis base directory.
cfg~Local path to NagVis etc directory.
icon~Local path to NagVis iconsets directory.
map~Local path to the folder holding the maps background image files (*.png)
mapCfg~Local path to the folder holding the map config files (*.cfg)
htmlBase~Path to NagVis HTTP Base URL.
htmlCgi~HTTP path to the Nagios cgi directory (/nagios/cgi-bin).
htmlIcon~HTTP path to the NagVis iconset directory.
htmlMap~HTTP path to the NagVis maps (/nagios/nagvis/maps/).
htmldoku~HTTP path to the NagVis documentation.
header~Name of the header include file.
index~Include file for default page.
dbHost~
dbPort~
dbName~
dbUser~
dbPass~
dbPrefix~
dbInstanceId~
cgiUser~The user Nagvis runs the CGI as (MUST be 'allowed for all services', 'allowed for all hosts')
cgi~Full local path to the directory containing the CGIs.
version~Momentan genutzte NagVis Version
title~Titel der NagVis Seiten